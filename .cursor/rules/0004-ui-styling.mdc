---
description: 
globs: *.tsx,*.ts,*.js,*.jsx
alwaysApply: false
---
# UI and styling

## Common rules
- When using DSFR components, Always create first a component in @/components/ui so that we can easily extend it
- Tailwind for components and styling.
- Never use styled-components
- Use class-variance-authority when needed
- Use framer motion for animations.
- Implement responsive design with Tailwind CSS using a mobile-first approach.
- Prefer import of components in components/ui when importing components
- Use [TableSimple.tsx](mdc:src/components/ui/TableSimple.tsx) over [Table.tsx](mdc:src/components/ui/Table.tsx) as it's deprecated

## Creating a component

- Prefer the use of property "variant" and size in case it's needed
- Do not use Box as it's getting deprecated
- Do not use Text as it's getting deprecated
- Prefer creating it like src/components/ui/Component.tsx instead of src/components/Component/ui/Component/index.tsx
- If needed, use class-variance-authority like in src/components/ui/Section.tsx
- Always use `const ComponentName = ` and `export default ComponentName` for main component.
- Always use an object "props" as the first argument of your component

Example:

```tsx
export type MyComponentProps = {
  prop1: string;
  prop2: number;
};

const MyComponent: React.FC<MyComponentProps> = ({ prop1, prop2 }) => {
  return <div>{props.prop1}</div>;
};

export default MyComponent;
```
