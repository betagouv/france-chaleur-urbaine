{
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "plugin:react/recommended",
    "eslint:recommended",
    "prettier",
    "plugin:prettier/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:json/recommended",
    "plugin:@next/next/recommended",
    "next/core-web-vitals"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true,
      "modules": true
    },
    "ecmaVersion": 12,
    "sourceType": "module"
  },
  "plugins": ["react", "@typescript-eslint", "prettier", "better-styled-components", "react-hooks"],
  "rules": {
    "prettier/prettier": "error",
    "react/prefer-stateless-function": 0,
    "linebreak-style": 0,
    "jsx-a11y/heading-has-content": 0,
    "jsx-a11y/href-no-hash": 0,
    "jsx-a11y/anchor-is-valid": 0,
    "no-underscore-dangle": 0,
    "react/no-find-dom-node": 0,
    "react/prop-types": 0,
    "no-nested-ternary": 0,
    "react/no-unescaped-entities": 0,
    "no-console": ["warn", { "allow": ["warn", "error", "info"] }],
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/ban-types": "warn",
    "no-empty-function": "off",
    "@typescript-eslint/no-empty-function": ["error"],
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "vars": "all",
        "args": "after-used",
        "ignoreRestSiblings": true,
        "caughtErrorsIgnorePattern": "^ignore"
      }
    ],
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "off",
    "react/jsx-uses-react": "off",
    "react/react-in-jsx-scope": "off",
    "no-irregular-whitespace": "off",
    "@next/next/no-img-element": "off",

    // turn on errors for missing imports
    "import/no-unresolved": "error",
    "import/order": [
      "error",
      {
        "groups": [
          "builtin", // Built-in imports (come from NodeJS native) go first
          "external", // <- External imports
          "internal", // <- Absolute imports
          ["sibling", "parent"], // <- Relative imports, the sibling and parent types can be mingled together
          "index", // <- index imports
          "unknown" // <- unknown imports always last
        ],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "json/*": ["error", { "allowComments": true }]
  }
}
