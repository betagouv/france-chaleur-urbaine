import Button from '@codegouvfr/react-dsfr/Button';
import { GetStaticPaths, GetStaticProps, InferGetStaticPropsType } from 'next';
import { useRouter } from 'next/navigation';
import React from 'react';

import SimplePage from '@components/shared/page/SimplePage';

type PotentielCreationReseauPageProps = InferGetStaticPropsType<typeof getStaticProps>;

const PotentielCreationReseauPage: React.FC<PotentielCreationReseauPageProps> = ({ insee }) => {
  const router = useRouter();

  return (
    <SimplePage title="Potentiel de création de réseau" mode="public-fullscreen">
      <div className="fr-container fr-mt-2w">
        <div className="fr-grid-row">
          <div className="fr-col-12">
            <Button
              onClick={() => router.push('/collectivites-et-exploitants/potentiel-creation-reseau')}
              priority="secondary"
              size="small"
              iconId="fr-icon-arrow-left-line"
              className="fr-mb-2w"
            >
              Retour
            </Button>
            <div>Potentiel de création de réseau pour {insee} </div>
          </div>
        </div>
      </div>
    </SimplePage>
  );
};

export const getStaticProps: GetStaticProps = async ({ params }) => {
  const insee = (params?.['insee-ville'] as string)?.split('-')[0];

  if (!insee) {
    return {
      notFound: true, // Return a 404 if `insee` is not available
    };
  }
  return {
    props: {
      insee,
    },
  };
};

export const getStaticPaths: GetStaticPaths = async () => {
  return {
    paths: [],
    fallback: 'blocking',
  };
};

export default PotentielCreationReseauPage;
