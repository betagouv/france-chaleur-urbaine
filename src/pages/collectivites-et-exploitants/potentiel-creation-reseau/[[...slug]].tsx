import Button from '@codegouvfr/react-dsfr/Button';
import { GetStaticPaths, InferGetStaticPropsType } from 'next';
import { useRouter } from 'next/navigation';
import React from 'react';

import AddressAutocompleteInput from '@components/form/dsfr/AddressAutocompleteInput';
import Map from '@components/Map/Map';
import SimplePage from '@components/shared/page/SimplePage';
import Box from '@components/ui/Box';
import Heading from '@components/ui/Heading';
import Text from '@components/ui/Text';
import { getCommunePotentiel } from '@core/infrastructure/repository/zoneAPotentiel';
import { createMapConfiguration } from 'src/services/Map/map-configuration';

type PotentielCreationReseauPageProps = InferGetStaticPropsType<typeof getStaticProps>;

const franceBounds: [number, number, number, number] = [-9.3175, 41.2634, 13.6625, 52.124];

const DetailsCommune: React.FC<{ commune: NonNullable<PotentielCreationReseauPageProps['commune']> }> = ({ commune }) => {
  const router = useRouter();
  return (
    <>
      <Button
        onClick={() => router.push('/collectivites-et-exploitants/potentiel-creation-reseau')}
        priority="secondary"
        size="small"
        iconId="fr-icon-arrow-left-line"
        className="fr-mb-2w"
      >
        Retour
      </Button>
      <Box py="2w">
        <Heading as="h1" size="h3">
          {commune.nom}
        </Heading>
        <Text size="lg" fontWeight="bold">
          {commune.nbZonesAFortPotentiel > 0
            ? 'Il existe un fort potentiel pour la création d’un réseau de chaleur sur votre territoire'
            : commune.nbZonesAPotentiel > 0
            ? 'Il existe un potentiel pour la création d’un réseau de chaleur sur votre territoire'
            : 'Une étude plus fine sur la base des consommations réelles des bâtiments est nécessaires'}
        </Text>
      </Box>
      {commune.nbZonesAPotentiel > 0 ? (
        <>
          <Box py="1w">
            {commune.nbZonesAFortPotentiel > 0 ? (
              <>
                <Text color="success" className="fr-text--lg" fontWeight="bold">
                  {commune.nbZonesAFortPotentiel}
                </Text>
                <p className="fr-text--sm">
                  <strong>zones d’opportunité à fort potentiel</strong> identifiées. Il s’agit de secteurs sur lesquels le développement
                  d’un réseau de chaleur apparaît pertinent.
                </p>
              </>
            ) : (
              <>
                <Text color="success" className="fr-text--lg" fontWeight="bold">
                  {commune.nbZonesAPotentiel}
                </Text>
                <p className="fr-text--sm">
                  <strong>zones d’opportunité à potentiel</strong> identifiées. Il s’agit de secteurs sur lesquels le développement d’un
                  réseau de chaleur apparaît possible.
                </p>
              </>
            )}
          </Box>
          <Box py="1w">
            <Text color="success" className="fr-text--lg" fontWeight="bold">
              {commune.besoinsChauffage.toLocaleString('fr-FR', { maximumFractionDigits: 1 })} GWh/an
            </Text>
            <p className="fr-text--sm">
              <strong>besoin en chauffage</strong> cumulés sur ces zones
            </p>
          </Box>
          <Box py="1w">
            <Text color="success" className="fr-text--lg" fontWeight="bold">
              {commune.besoinsECS.toLocaleString('fr-FR', { maximumFractionDigits: 1 })} GWh/an
            </Text>
            <p className="fr-text--sm">
              <strong>besoin en eau chaude sanitaire</strong> cumulés sur ces zones
            </p>
          </Box>
        </>
      ) : null}
    </>
  );
};

const SearchCommune: React.FC = () => {
  const router = useRouter();
  return (
    <Box p="2w">
      <Heading as="h1" size="h3">
        Votre commune n’a pas de réseau de chaleur&nbsp;?
      </Heading>
      <AddressAutocompleteInput
        label="Testez en un clic le potentiel pour la création d'un réseau de chaleur sur votre territoire"
        onlyCities
        onSelect={(address) => {
          router.push(
            `/collectivites-et-exploitants/potentiel-creation-reseau/${address.properties.citycode}-${encodeURIComponent(
              address.properties.city
            )}`
          );
        }}
      />
    </Box>
  );
};

const PotentielCreationReseauPage: React.FC<PotentielCreationReseauPageProps> = ({ commune }) => {
  return (
    <SimplePage title="Potentiel de création de réseau" mode="public-fullscreen">
      <div className="fr-container fr-mt-2w">
        <div className="fr-grid-row">
          <div className="fr-col-4" style={{ minHeight: '50vh' }}>
            {commune ? <DetailsCommune commune={commune} /> : <SearchCommune />}
          </div>
          <div className="fr-col-8">
            <Map
              withoutLogo
              pinsList={[]}
              geolocDisabled
              bounds={commune?.bounds || franceBounds}
              initialMapConfiguration={createMapConfiguration({
                reseauxDeChaleur: {
                  show: true,
                },
                zonesOpportunite: {
                  show: true,
                },
                reseauxEnConstruction: true,
                zonesDeDeveloppementPrioritaire: true,
              })}
            />
          </div>
        </div>
      </div>
      <Box backgroundColor="grey-975-75" py="10w">
        <div className="fr-container">TODO</div>
      </Box>
      <Box py="10w">
        <div className="fr-container">TODO</div>
      </Box>
    </SimplePage>
  );
};

export const getStaticProps = async ({ params }: { params: { slug?: string } }) => {
  const codeInsee = (params?.slug?.[0] as string)?.split('-')[0];

  const commune = codeInsee ? await getCommunePotentiel(codeInsee) : null;

  if (codeInsee && !commune) {
    return {
      notFound: true,
    };
  }
  return {
    props: {
      commune,
    },
  };
};

export const getStaticPaths: GetStaticPaths = async () => {
  return {
    paths: [],
    fallback: 'blocking',
  };
};

export default PotentielCreationReseauPage;
